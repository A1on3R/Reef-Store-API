---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/ingredients":
    get:
      summary: Retrieves all ingredients for a store
      tags:
      - ingredients
      parameters:
      - name: page
        in: query
        description: Page number for pagination
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: ingredients found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Creates an ingredient for an item
      tags:
      - ingredients
      parameters:
      - name: item_id
        in: path
        description: ID of the store
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: ingredient created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/items":
    get:
      summary: Retrieves all items for a store
      tags:
      - Items
      parameters:
      - name: page
        in: query
        description: Page number for pagination
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: items found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Creates an item for a store
      tags:
      - Items
      parameters:
      - name: store_id
        in: path
        description: ID of the store
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: item created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/items/{id}":
    put:
      summary: Updates an item
      tags:
      - Items
      parameters:
      - name: id
        in: path
        description: ID of the item to update
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: item updated
        '404':
          description: item or store not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the item
              required:
              - name
    delete:
      summary: Deletes an item
      tags:
      - Items
      parameters:
      - name: id
        in: path
        description: ID of the item to delete
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: item deleted
        '404':
          description: item not found
  "/stores":
    get:
      summary: Retrieves all stores
      tags:
      - Stores
      parameters:
      - name: page
        in: query
        description: Page number for pagination
        required: false
        schema:
          type: integer
      - name: starts_with
        in: query
        description: Search Query to search by name
        required: false
        schema:
          type: string
      responses:
        '200':
          description: stores found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Creates a store
      tags:
      - Stores
      parameters: []
      responses:
        '201':
          description: store created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/stores/{id}":
    put:
      summary: Updates a store
      tags:
      - Stores
      parameters:
      - name: id
        in: path
        description: ID of the store to update
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: store updated
        '404':
          description: store not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the store
                description:
                  type: string
                  description: Description of the store
              required:
              - name
    delete:
      summary: Deletes a store
      tags:
      - Stores
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: store deleted
        '404':
          description: store not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
